
import typing
import botocore.session
import aws_meta
from botocore.model import *
from botocore.client import BaseClient
from datetime import datetime
import boto3


class Map(dict):
    pass
    
    
# noinspection PyPep8Naming
class sns_client_type(BaseClient):
    def add_permission(self, TopicArn: str, Label: str, AWSAccountId: list, ActionName: list): ...
    def check_if_phone_number_is_opted_out(self, phoneNumber: str): ...
    def confirm_subscription(self, TopicArn: str, Token: str, AuthenticateOnUnsubscribe: str = None): ...
    def create_platform_application(self, Name: str, Platform: str, Attributes: Map): ...
    def create_platform_endpoint(self, PlatformApplicationArn: str, Token: str, CustomUserData: str = None, Attributes: Map = None): ...
    def create_topic(self, Name: str, Attributes: Map = None, Tags: list = None): ...
    def delete_endpoint(self, EndpointArn: str): ...
    def delete_platform_application(self, PlatformApplicationArn: str): ...
    def delete_topic(self, TopicArn: str): ...
    def get_endpoint_attributes(self, EndpointArn: str): ...
    def get_platform_application_attributes(self, PlatformApplicationArn: str): ...
    def get_sms_attributes(self, attributes: list = None): ...
    def get_subscription_attributes(self, SubscriptionArn: str): ...
    def get_topic_attributes(self, TopicArn: str): ...
    def list_endpoints_by_platform_application(self, PlatformApplicationArn: str, NextToken: str = None): ...
    def list_phone_numbers_opted_out(self, nextToken: str = None): ...
    def list_platform_applications(self, NextToken: str = None): ...
    def list_subscriptions(self, NextToken: str = None): ...
    def list_subscriptions_by_topic(self, TopicArn: str, NextToken: str = None): ...
    def list_tags_for_resource(self, ResourceArn: str): ...
    def list_topics(self, NextToken: str = None): ...
    def opt_in_phone_number(self, phoneNumber: str): ...
    def publish(self, Message: str, TopicArn: str = None, TargetArn: str = None, PhoneNumber: str = None, Subject: str = None, MessageStructure: str = None, MessageAttributes: Map = None): ...
    def remove_permission(self, TopicArn: str, Label: str): ...
    def set_endpoint_attributes(self, EndpointArn: str, Attributes: Map): ...
    def set_platform_application_attributes(self, PlatformApplicationArn: str, Attributes: Map): ...
    def set_sms_attributes(self, attributes: Map): ...
    def set_subscription_attributes(self, SubscriptionArn: str, AttributeName: str, AttributeValue: str = None): ...
    def set_topic_attributes(self, TopicArn: str, AttributeName: str, AttributeValue: str = None): ...
    def subscribe(self, TopicArn: str, Protocol: str, Endpoint: str = None, Attributes: Map = None, ReturnSubscriptionArn: bool = None): ...
    def tag_resource(self, ResourceArn: str, Tags: list): ...
    def unsubscribe(self, SubscriptionArn: str): ...
    def untag_resource(self, ResourceArn: str, TagKeys: list): ...
    pass

